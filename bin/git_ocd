#!/usr/bin/env ruby

require 'pry'
require 'optparse'
require 'methadone'
require 'listen'
require 'git_ocd'


class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |*repo_paths|

    listeners = []
    delay = options['delay'].to_i

    repo_paths.each do |path|
      listeners << Listen.to(path) do |modified, added, removed|
        puts "modified absolute path: #{modified}"
        # puts "added absolute path: #{added}"
        # puts "removed absolute path: #{removed}"
        git_command_result = `cd #{path} && git commit -a -m "updated on save" && git push`
      end
    end

    listeners.map(&:start)

    # we have to call trap after starting listeners, otherwise the listeners
    # will intercept the trap
    trap("SIGINT") { listeners.map(&:stop); exit }

    # main loop
    loop do
      sleep 1
    end
  end

  description "git-ocd watches a git repo and auto-commits / pushes when files change."

  version ::GitOcd::VERSION

  options['delay'] = 5
  on("--delay DELAY", "maximum delay (in seconds) between acting on changes; default is 5 seconds")
  on("--commit-message MESSAGE", "commit message")

  arg :repo_paths, :many, "Path(s) to the git repository(ies) that you want to observe"

  use_log_level_option

  go!
end
